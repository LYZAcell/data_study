#### ÌïÑÏàòÍ≥ºÏ†ú 1
#### ÏúÑÏùò 2Í∞úÏùò ÎßàÌä∏ ÏøºÎ¶¨Î•º Í≤ÄÏ¶ùÌï¥ Ï£ºÏÑ∏Ïöî.
#### Î™ÖÌôïÌïú Í≤ÄÏ¶ù Î°úÏßÅÏùÑ ÏûëÏÑ±ÌïòÍ≥† -> Ìï¥Îãπ Í∞íÏùÑ Í≤ÄÏ¶ùÌï† Ïàò ÏûàÎäî ÏΩîÎìúÏôÄ Ìï®Íªò Ï†ïÎ¶¨Ìï¥ÏÑú Ï£ºÏÑ∏Ïöî.
#### Îëò Îã§ Î™®Îëê Í≤ÄÏ¶ùÌï¥Ïïº ÌïòÍ≥† ÏòàÏãúÎäî ÏµúÏÜå 2Í∞ú Ïù¥ÏÉÅÏî© Ìï¥Ïïº Ìï©ÎãàÎã§. - Ï¥ù ÏµúÏÜå 4Í∞ú Ïù¥ÏÉÅ ÏßÑÌñâ

# 1. ÌäπÏ†ï ÎÇ†Ïßú Îß§Ï∂úÌï©Í≥º Í∞úÎ≥Ñ Ï£ºÎ¨∏Ìï©Ïùò ÏùºÏπò ÌôïÏù∏
SELECT 
    o.orderDate,
    SUM(od.quantityOrdered * od.priceEach) AS expected_total_revenue,
    (SELECT total_revenue 
     FROM (
         SELECT o.orderDate, SUM(od.quantityOrdered * od.priceEach) AS total_revenue
         FROM orders AS o
         JOIN orderdetails AS od ON o.orderNumber = od.orderNumber
         GROUP BY o.orderDate
     ) AS revenue_summary
     WHERE orderDate = '2004-11-25'  -- YYYY-MM-DD ÌòïÏãùÏúºÎ°ú ÏûÖÎ†•
    ) AS calculated_total_revenue
FROM orders AS o
JOIN orderdetails AS od ON o.orderNumber = od.orderNumber
WHERE o.orderDate = '2004-11-25'  -- YYYY-MM-DD ÌòïÏãùÏúºÎ°ú ÏûÖÎ†•
GROUP BY o.orderDate;

#2. Ï£ºÎ¨∏Îãπ ÌèâÍ∑†Îß§Ï∂ú _ total_revenueÏôÄ total_orders Í≤ÄÏ¶ù
-- Í≤ÄÏ¶ù: Ï£ºÎ¨∏Îãπ ÌèâÍ∑† Îß§Ï∂ú ÎπÑÍµê
SELECT 
    STR_TO_DATE(o.orderDate, '%Y-%m-%d') AS orderDate,
    SUM(od.quantityOrdered * od.priceEach) / COUNT(DISTINCT o.orderNumber) AS expected_avg_order_value,
    (SELECT avg_order_value
     FROM (
         SELECT STR_TO_DATE(o.orderDate, '%Y-%m-%d') AS orderDate, 
                ROUND(SUM(od.quantityOrdered * od.priceEach) / COUNT(DISTINCT o.orderNumber), 2) AS avg_order_value
         FROM orders AS o
         JOIN orderdetails AS od ON o.orderNumber = od.orderNumber
         GROUP BY orderDate
     ) AS order_avg
     WHERE orderDate = STR_TO_DATE('YYYY-MM-DD', '%Y-%m-%d')
    ) AS calculated_avg_order_value
FROM orders AS o
JOIN orderdetails AS od ON o.orderNumber = od.orderNumber
WHERE STR_TO_DATE(o.orderDate, '%Y-%m-%d') = STR_TO_DATE('YYYY-MM-DD', '%Y-%m-%d')
GROUP BY orderDate;

#Í≤ÄÏ¶ù 3. ÌäπÏ†ï Í≥†Í∞ùÏùò Ï¥ùÏ£ºÎ¨∏ ÌöüÏàòÏôÄ Ïã§Ï†ú Ï£ºÎ¨∏ Ïàò ÎπÑÍµê
-- Í≤ÄÏ¶ù: ÌäπÏ†ï Í≥†Í∞ùÏùò Ï¥ù Ï£ºÎ¨∏ ÌöüÏàò ÎπÑÍµê
SELECT 
    c.customerNumber, 
    COUNT(DISTINCT o.orderNumber) AS expected_total_orders,
    (SELECT total_orders 
     FROM (
         SELECT c.customerNumber, COUNT(DISTINCT o.orderNumber) AS total_orders
         FROM customers AS c
         LEFT JOIN orders AS o ON o.customerNumber = c.customerNumber
         GROUP BY c.customerNumber
     ) AS customer_order_summary
     WHERE customerNumber = 103
    ) AS calculated_total_orders
FROM customers AS c
LEFT JOIN orders AS o ON o.customerNumber = c.customerNumber
WHERE c.customerNumber = 103
GROUP BY c.customerNumber;


# Í≤ÄÏ¶ù4. Í≥†Í∞ùÎì±Í∏â Í≤ÄÏ¶ù
-- Í≤ÄÏ¶ù: ÌäπÏ†ï Í≥†Í∞ùÏù¥ VIP Í≥†Í∞ùÏù∏ÏßÄ ÌôïÏù∏ _ Ï£ºÎ¨∏ÏàòÎ°ú Îì±Í∏â Í≤ÄÏ¶ù 
SELECT 
    c.customerNumber,
    COUNT(DISTINCT o.orderNumber) AS total_orders,
    SUM(od.quantityOrdered * od.priceEach) AS total_revenue,
    CASE 
        WHEN COUNT(DISTINCT o.orderNumber) > 20 AND SUM(od.quantityOrdered * od.priceEach) > 50000 THEN 'VIP Í≥†Í∞ù'
        WHEN COUNT(DISTINCT o.orderNumber) BETWEEN 5 AND 20 THEN 'ÏùºÎ∞ò Í≥†Í∞ù'
        WHEN DATEDIFF(CURDATE(), MAX(o.orderDate)) > 365 THEN 'Ìú¥Î©¥ Í≥†Í∞ù'
    END AS expected_customer_seg,
    (SELECT customer_seg 
     FROM (
         SELECT c.customerNumber, 
                CASE 
                    WHEN COUNT(DISTINCT o.orderNumber) > 20 AND SUM(od.quantityOrdered * od.priceEach) > 50000 THEN 'VIP Í≥†Í∞ù'
                    WHEN COUNT(DISTINCT o.orderNumber) BETWEEN 5 AND 20 THEN 'ÏùºÎ∞ò Í≥†Í∞ù'
                    WHEN DATEDIFF(CURDATE(), MAX(o.orderDate)) > 365 THEN 'Ìú¥Î©¥ Í≥†Í∞ù'
                END AS customer_seg
         FROM customers AS c
         LEFT JOIN orders AS o ON o.customerNumber = c.customerNumber
         LEFT JOIN orderdetails AS od ON od.orderNumber = o.orderNumber
         GROUP BY c.customerNumber
     ) AS customer_segment_summary
     WHERE customer_segment_summary.customerNumber = c.customerNumber  -- ‚úÖ ÏàòÏ†ïÎêú Î∂ÄÎ∂Ñ
    ) AS calculated_customer_seg
FROM customers AS c
LEFT JOIN orders AS o ON o.customerNumber = c.customerNumber
LEFT JOIN orderdetails AS od ON od.orderNumber = o.orderNumber
GROUP BY c.customerNumber;

#### ÌïÑÏàòÍ≥ºÏ†ú 2
#### Í≥†Í∞ùÏùò ÏÑ∏Í∑∏Î®ºÌä∏Î•º ÏÉàÎ°≠Í≤å ÎÇòÎà† Ï£ºÏÑ∏Ïöî.
#### 5Îì±Í∏âÏúºÎ°ú ÎÇòÎà†ÏÑú (ÏßÅÏ†ë Ïó¨Îü¨Î∂ÑÎì§Ïù¥ Îç∞Ïù¥ÌÑ∞Î•º Î≥¥Í≥† ÏÑ§Í≥ÑÌïòÏãúÎ©¥ Îê©ÎãàÎã§.) 5Í∞úÏùò Îì±Í∏âÏùò Í≥†Í∞ù ÏÑ∏Í∑∏Î®ºÌä∏Í∞Ä ÎÇòÏò¨ Ïàò ÏûàÍ≤å ÎßåÎì§Ïñ¥ Ï£ºÏãúÎ©¥ Îê©ÎãàÎã§.
#### ÏàòÏóÖ ÎïåÎäî 3Í∞ú ÌñàÏßÄÎßå Ïã§Ï†ú 5Í∞úÍπåÏßÄ ÏßÑÌñâÌïòÍ≥† Î™®Îëê Î°úÏßÅÏÉÅ Í≤πÏπòÏßÄ ÏïäÍ≤å ÏµúÎåÄÌïú Îã§ ÏÑ∏Í∑∏Î®ºÌä∏Î°ú ÎÇòÎâ† Ïàò ÏûàÎèÑÎ°ù ÏßÄÏ†ïÌï¥ Ï£ºÏÑ∏Ïöî!

# VIP - Ï£ºÎ¨∏ 30Ìöå, Ï¥ùÎß§Ï∂ú 10ÎßåÌöå
# Ï∂©ÏÑ±: 15-29Ìöå, Îß§Ï∂ú 5Îßå
# ÏùºÎ∞ò: 5-14Ìöå, ÎßåÌöå
# Ïã†Í∑ú: 6Í∞úÏõîÏù¥ÎÇ¥ Ï≤´ Ï£ºÎ¨∏, Ï£ºÎ¨∏ 1-4Ìöå
# Ìú¥Î©¥: ÎßàÏßÄÎßâÏ£ºÎ¨∏Ïù¥ 1ÎÖÑ Ïù¥ÏÉÅ Ï†Ñ
SELECT 
    c.customerNumber,
    c.customerName,
    COUNT(DISTINCT o.orderNumber) AS total_orders,
    COALESCE(SUM(od.quantityOrdered * od.priceEach), 0) AS total_revenue,
    COALESCE(ROUND(SUM(od.quantityOrdered * od.priceEach) / NULLIF(COUNT(DISTINCT o.orderNumber), 0), 2), 0) AS avg_order_value,
    MAX(o.orderDate) AS last_order_date,
    DATEDIFF(CURDATE(), MAX(o.orderDate)) AS days_since_last_order,
    CASE
        WHEN COUNT(DISTINCT o.orderNumber) >= 30 AND SUM(od.quantityOrdered * od.priceEach) >= 100000 THEN 'üíéVIP Í≥†Í∞ù'
        WHEN COUNT(DISTINCT o.orderNumber) BETWEEN 15 AND 29 AND SUM(od.quantityOrdered * od.priceEach) >= 50000 THEN 'üî•Ï∂©ÏÑ± Í≥†Í∞ù'
        WHEN COUNT(DISTINCT o.orderNumber) BETWEEN 5 AND 14 AND SUM(od.quantityOrdered * od.priceEach) >= 10000 THEN 'ÏùºÎ∞ò Í≥†Í∞ù'
        WHEN COUNT(DISTINCT o.orderNumber) BETWEEN 1 AND 4 AND MAX(o.orderDate) >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) THEN 'Ïã†Í∑ú Í≥†Í∞ù'
        WHEN MAX(o.orderDate) IS NULL OR DATEDIFF(CURDATE(), MAX(o.orderDate)) > 365 THEN 'Ìú¥Î©¥ Í≥†Í∞ù'
    END AS customer_segment
FROM customers AS c
LEFT JOIN orders AS o ON o.customerNumber = c.customerNumber
LEFT JOIN orderdetails AS od ON od.orderNumber = o.orderNumber
GROUP BY c.customerNumber;
